/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'

// Create Virtual Routes

const StudentTeacherLazyImport = createFileRoute('/studentTeacher')()
const LoginTeacherLazyImport = createFileRoute('/loginTeacher')()
const LoginStudentLazyImport = createFileRoute('/loginStudent')()
const IndexLazyImport = createFileRoute('/')()
const LayoutMyBookingsLazyImport = createFileRoute('/_layout/myBookings')()
const LayoutBookingConfirmLazyImport = createFileRoute(
  '/_layout/bookingConfirm',
)()
const LayoutBookingLazyImport = createFileRoute('/_layout/booking')()

// Create/Update Routes

const StudentTeacherLazyRoute = StudentTeacherLazyImport.update({
  id: '/studentTeacher',
  path: '/studentTeacher',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/studentTeacher.lazy').then((d) => d.Route),
)

const LoginTeacherLazyRoute = LoginTeacherLazyImport.update({
  id: '/loginTeacher',
  path: '/loginTeacher',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/loginTeacher.lazy').then((d) => d.Route))

const LoginStudentLazyRoute = LoginStudentLazyImport.update({
  id: '/loginStudent',
  path: '/loginStudent',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/loginStudent.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutMyBookingsLazyRoute = LayoutMyBookingsLazyImport.update({
  id: '/myBookings',
  path: '/myBookings',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.myBookings.lazy').then((d) => d.Route),
)

const LayoutBookingConfirmLazyRoute = LayoutBookingConfirmLazyImport.update({
  id: '/bookingConfirm',
  path: '/bookingConfirm',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.bookingConfirm.lazy').then((d) => d.Route),
)

const LayoutBookingLazyRoute = LayoutBookingLazyImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.booking.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/loginStudent': {
      id: '/loginStudent'
      path: '/loginStudent'
      fullPath: '/loginStudent'
      preLoaderRoute: typeof LoginStudentLazyImport
      parentRoute: typeof rootRoute
    }
    '/loginTeacher': {
      id: '/loginTeacher'
      path: '/loginTeacher'
      fullPath: '/loginTeacher'
      preLoaderRoute: typeof LoginTeacherLazyImport
      parentRoute: typeof rootRoute
    }
    '/studentTeacher': {
      id: '/studentTeacher'
      path: '/studentTeacher'
      fullPath: '/studentTeacher'
      preLoaderRoute: typeof StudentTeacherLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/booking': {
      id: '/_layout/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof LayoutBookingLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/bookingConfirm': {
      id: '/_layout/bookingConfirm'
      path: '/bookingConfirm'
      fullPath: '/bookingConfirm'
      preLoaderRoute: typeof LayoutBookingConfirmLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/myBookings': {
      id: '/_layout/myBookings'
      path: '/myBookings'
      fullPath: '/myBookings'
      preLoaderRoute: typeof LayoutMyBookingsLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutBookingLazyRoute: typeof LayoutBookingLazyRoute
  LayoutBookingConfirmLazyRoute: typeof LayoutBookingConfirmLazyRoute
  LayoutMyBookingsLazyRoute: typeof LayoutMyBookingsLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutBookingLazyRoute: LayoutBookingLazyRoute,
  LayoutBookingConfirmLazyRoute: LayoutBookingConfirmLazyRoute,
  LayoutMyBookingsLazyRoute: LayoutMyBookingsLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentLazyRoute
  '/loginTeacher': typeof LoginTeacherLazyRoute
  '/studentTeacher': typeof StudentTeacherLazyRoute
  '/booking': typeof LayoutBookingLazyRoute
  '/bookingConfirm': typeof LayoutBookingConfirmLazyRoute
  '/myBookings': typeof LayoutMyBookingsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentLazyRoute
  '/loginTeacher': typeof LoginTeacherLazyRoute
  '/studentTeacher': typeof StudentTeacherLazyRoute
  '/booking': typeof LayoutBookingLazyRoute
  '/bookingConfirm': typeof LayoutBookingConfirmLazyRoute
  '/myBookings': typeof LayoutMyBookingsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentLazyRoute
  '/loginTeacher': typeof LoginTeacherLazyRoute
  '/studentTeacher': typeof StudentTeacherLazyRoute
  '/_layout/booking': typeof LayoutBookingLazyRoute
  '/_layout/bookingConfirm': typeof LayoutBookingConfirmLazyRoute
  '/_layout/myBookings': typeof LayoutMyBookingsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/booking'
    | '/bookingConfirm'
    | '/myBookings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/booking'
    | '/bookingConfirm'
    | '/myBookings'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/_layout/booking'
    | '/_layout/bookingConfirm'
    | '/_layout/myBookings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginStudentLazyRoute: typeof LoginStudentLazyRoute
  LoginTeacherLazyRoute: typeof LoginTeacherLazyRoute
  StudentTeacherLazyRoute: typeof StudentTeacherLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LayoutRoute: LayoutRouteWithChildren,
  LoginStudentLazyRoute: LoginStudentLazyRoute,
  LoginTeacherLazyRoute: LoginTeacherLazyRoute,
  StudentTeacherLazyRoute: StudentTeacherLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/loginStudent",
        "/loginTeacher",
        "/studentTeacher"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/_layout": {
      "filePath": "_layout.jsx",
      "children": [
        "/_layout/booking",
        "/_layout/bookingConfirm",
        "/_layout/myBookings"
      ]
    },
    "/loginStudent": {
      "filePath": "loginStudent.lazy.jsx"
    },
    "/loginTeacher": {
      "filePath": "loginTeacher.lazy.jsx"
    },
    "/studentTeacher": {
      "filePath": "studentTeacher.lazy.jsx"
    },
    "/_layout/booking": {
      "filePath": "_layout.booking.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/bookingConfirm": {
      "filePath": "_layout.bookingConfirm.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/myBookings": {
      "filePath": "_layout.myBookings.lazy.jsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
