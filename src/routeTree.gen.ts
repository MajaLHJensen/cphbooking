/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StudentTeacherImport } from './routes/studentTeacher'
import { Route as LoginTeacherImport } from './routes/loginTeacher'
import { Route as LoginStudentImport } from './routes/loginStudent'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutMyBookingsImport } from './routes/_layout.myBookings'
import { Route as LayoutBookingConfirmImport } from './routes/_layout.bookingConfirm'
import { Route as LayoutBookingImport } from './routes/_layout.booking'

// Create/Update Routes

const StudentTeacherRoute = StudentTeacherImport.update({
  id: '/studentTeacher',
  path: '/studentTeacher',
  getParentRoute: () => rootRoute,
} as any)

const LoginTeacherRoute = LoginTeacherImport.update({
  id: '/loginTeacher',
  path: '/loginTeacher',
  getParentRoute: () => rootRoute,
} as any)

const LoginStudentRoute = LoginStudentImport.update({
  id: '/loginStudent',
  path: '/loginStudent',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutMyBookingsRoute = LayoutMyBookingsImport.update({
  id: '/myBookings',
  path: '/myBookings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBookingConfirmRoute = LayoutBookingConfirmImport.update({
  id: '/bookingConfirm',
  path: '/bookingConfirm',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBookingRoute = LayoutBookingImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/loginStudent': {
      id: '/loginStudent'
      path: '/loginStudent'
      fullPath: '/loginStudent'
      preLoaderRoute: typeof LoginStudentImport
      parentRoute: typeof rootRoute
    }
    '/loginTeacher': {
      id: '/loginTeacher'
      path: '/loginTeacher'
      fullPath: '/loginTeacher'
      preLoaderRoute: typeof LoginTeacherImport
      parentRoute: typeof rootRoute
    }
    '/studentTeacher': {
      id: '/studentTeacher'
      path: '/studentTeacher'
      fullPath: '/studentTeacher'
      preLoaderRoute: typeof StudentTeacherImport
      parentRoute: typeof rootRoute
    }
    '/_layout/booking': {
      id: '/_layout/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof LayoutBookingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/bookingConfirm': {
      id: '/_layout/bookingConfirm'
      path: '/bookingConfirm'
      fullPath: '/bookingConfirm'
      preLoaderRoute: typeof LayoutBookingConfirmImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/myBookings': {
      id: '/_layout/myBookings'
      path: '/myBookings'
      fullPath: '/myBookings'
      preLoaderRoute: typeof LayoutMyBookingsImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutBookingRoute: typeof LayoutBookingRoute
  LayoutBookingConfirmRoute: typeof LayoutBookingConfirmRoute
  LayoutMyBookingsRoute: typeof LayoutMyBookingsRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutBookingRoute: LayoutBookingRoute,
  LayoutBookingConfirmRoute: LayoutBookingConfirmRoute,
  LayoutMyBookingsRoute: LayoutMyBookingsRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentRoute
  '/loginTeacher': typeof LoginTeacherRoute
  '/studentTeacher': typeof StudentTeacherRoute
  '/booking': typeof LayoutBookingRoute
  '/bookingConfirm': typeof LayoutBookingConfirmRoute
  '/myBookings': typeof LayoutMyBookingsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentRoute
  '/loginTeacher': typeof LoginTeacherRoute
  '/studentTeacher': typeof StudentTeacherRoute
  '/booking': typeof LayoutBookingRoute
  '/bookingConfirm': typeof LayoutBookingConfirmRoute
  '/myBookings': typeof LayoutMyBookingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/loginStudent': typeof LoginStudentRoute
  '/loginTeacher': typeof LoginTeacherRoute
  '/studentTeacher': typeof StudentTeacherRoute
  '/_layout/booking': typeof LayoutBookingRoute
  '/_layout/bookingConfirm': typeof LayoutBookingConfirmRoute
  '/_layout/myBookings': typeof LayoutMyBookingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/booking'
    | '/bookingConfirm'
    | '/myBookings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/booking'
    | '/bookingConfirm'
    | '/myBookings'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/loginStudent'
    | '/loginTeacher'
    | '/studentTeacher'
    | '/_layout/booking'
    | '/_layout/bookingConfirm'
    | '/_layout/myBookings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginStudentRoute: typeof LoginStudentRoute
  LoginTeacherRoute: typeof LoginTeacherRoute
  StudentTeacherRoute: typeof StudentTeacherRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  LoginStudentRoute: LoginStudentRoute,
  LoginTeacherRoute: LoginTeacherRoute,
  StudentTeacherRoute: StudentTeacherRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/loginStudent",
        "/loginTeacher",
        "/studentTeacher"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/_layout": {
      "filePath": "_layout.jsx",
      "children": [
        "/_layout/booking",
        "/_layout/bookingConfirm",
        "/_layout/myBookings"
      ]
    },
    "/loginStudent": {
      "filePath": "loginStudent.jsx"
    },
    "/loginTeacher": {
      "filePath": "loginTeacher.jsx"
    },
    "/studentTeacher": {
      "filePath": "studentTeacher.jsx"
    },
    "/_layout/booking": {
      "filePath": "_layout.booking.jsx",
      "parent": "/_layout"
    },
    "/_layout/bookingConfirm": {
      "filePath": "_layout.bookingConfirm.jsx",
      "parent": "/_layout"
    },
    "/_layout/myBookings": {
      "filePath": "_layout.myBookings.jsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
